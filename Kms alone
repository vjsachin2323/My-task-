HLD â€“ AWS KMS, SSL/TLS, and Encryption

1. Purpose

To ensure all data in AWS is protected at rest and in transit using KMS for key management, SSL/TLS for communication security, and encryption standards across AWS services.

â¸»

2. Audience
	â€¢	Cloud Security Engineers
	â€¢	DevOps Engineers
	â€¢	Compliance & Audit Teams

â¸»

3. Introduction

This design enforces:
	â€¢	KMS for centralized management of encryption keys.
	â€¢	SSL/TLS (via ACM) for secure communication to applications and APIs.
	â€¢	Encryption Enforcement for AWS services like S3, EBS, RDS, Redshift.

â¸»

4. Architecture and Design
	â€¢	KMS (Encryption at Rest):
	â€¢	CMKs (Customer Managed Keys) created per service.
	â€¢	Automatic key rotation enabled.
	â€¢	Access controlled via IAM key policies.
	â€¢	SSL/TLS (Encryption in Transit):
	â€¢	ACM certificates used with ALB, CloudFront, API Gateway.
	â€¢	Enforce TLS v1.2+ connections only.
	â€¢	Service-Level Encryption:
	â€¢	S3: Default bucket encryption with KMS CMK.
	â€¢	EBS: Encrypted volumes with KMS.
	â€¢	RDS/Redshift: Encrypted instances + SSL enforced for connections.
	â€¢	DynamoDB: Server-side encryption enabled by default.

(Diagram suggestion: KMS â†’ Services (S3, RDS, EBS, Redshift) for encryption at rest; ACM/SSL â†’ Load Balancer/API for encryption in transit.)

â¸»

5. List of Components & Services
	â€¢	AWS KMS
	â€¢	AWS ACM
	â€¢	Amazon S3, EBS, RDS, Redshift, DynamoDB

â¸»

6. Screenshots
	â€¢	KMS CMK configuration screen.
	â€¢	ACM certificate dashboard.
	â€¢	Encrypted S3 bucket / RDS instance.

â¸»

7. Observability (Backup & Restore)
	â€¢	KMS: Keys automatically backed and durable.
	â€¢	ACM: Certificates auto-renew.
	â€¢	CloudTrail + Config: Monitors if encryption disabled.

â¸»

8. Common Services
	â€¢	Integrated with Audit Account monitoring.
	â€¢	Linked with Security Hub for compliance validation.
	â€¢	Alerts via EventBridge if unencrypted resource created.

â¸»

ðŸ›  Implementation Steps

A. KMS Setup
	1.	Create CMK for each major service.
	2.	Enable automatic rotation.
	3.	Restrict access to key policies.
resource "aws_kms_key" "s3_key" {
  description         = "KMS key for S3 encryption"
  enable_key_rotation = true
}

B. SSL/TLS Setup
	1.	Request certificate in ACM:

aws acm request-certificate --domain-name example.com --validation-method DNS

2.	Attach ACM certificate to ALB/CloudFront.
	3.	Enforce HTTPS/TLS 1.2+.

C. Encryption Enforcement
	â€¢	S3: Block public access + default KMS encryption.
	â€¢	EBS: Encrypted-by-default enabled at account level.
	â€¢	RDS/Redshift: Enable storage encryption + enforce SSL parameter group.
	â€¢	DynamoDB: Default encryption with AWS-owned KMS key.
